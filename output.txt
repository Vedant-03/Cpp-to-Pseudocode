\documentclass{article}
\usepackage{algorithm}
\usepackage{algpseudocode}
\begin{document}
\begin{algorithm}
\caption{$level_order_traversal$}
\begin{algorithmic}
\Procedure{$level_order_traversal$}{$root, n, s$}
\If{$root==NULL$}
\State \Return $0$
\EndIf
\State $queue<Node> nodeQueue$
\Comment{$queue of nodes$}
\State $enqueue(nodeQueue, root)$
\While{$!nodeQueue.empty()$}
\State $node = nodeQueue.front()$
\State \textbf{print} d[node]
\Comment{$data = d. parent = NULLL$}
\State $dequeue(nodeQueue)$
\If{$l[node] != NULL$}
\State $enqueue(nodeQueue, l[node])$
\EndIf
\If{$r[node] != NULL$}
\State $enqueue(nodeQueue, r[node])$
\EndIf
\State \textbf{print} a
\EndWhile
\EndProcedure
\end{algorithmic}
\end{algorithm}
\end{document}
